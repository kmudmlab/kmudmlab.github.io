# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4



# name: Build and Deploy Jekyll Site

# on:
#   push:
#     branches:
#       - master

# jobs:
#   build_and_deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - name: Install Dependencies
#         run: sudo apt update && sudo apt install -y imagemagick libmagickwand-dev

#       # Ruby와 Bundler 설치
#       - name: Setup Ruby
#         uses: ruby/setup-ruby@v1
#         with:
#           ruby-version: '3.1' # Jekyll 버전에 맞는 Ruby 버전을 명시
#           bundler-cache: true # Gem 의존성 캐싱으로 빌드 속도 향상

#       # Jekyll 사이트 빌드 (이 과정에서 jekyll-minifier가 이미지를 압축!)
#       - name: Build the site
#         env:
#           JEKYLL_ENV: production
#         run: bundle exec jekyll build

#       # 빌드된 사이트를 gh-pages 브랜치에 배포
#       - name: Deploy
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: ./_site # Jekyll 빌드 결과물이 담긴 폴더